# Generated by Django 4.1.2 on 2022-10-18 12:36

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import phone_field.models
import user.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('first_name', models.CharField(blank=True, max_length=32, verbose_name='First name')),
                ('last_name', models.CharField(blank=True, max_length=32, verbose_name='Last name')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='Date joined')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', user.managers.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
            ],
        ),
        migrations.CreateModel(
            name='Institution',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, unique=True)),
                ('description', models.TextField()),
                ('type', models.CharField(choices=[(1, 'FOUNDATION'), (2, 'NON-GOVERNMENTAL ORGANIZATION'), (3, 'LOCAL COLLECTION')], default='FOUNDATION', max_length=2)),
                ('categories', models.ManyToManyField(to='user.category')),
            ],
        ),
        migrations.CreateModel(
            name='Donation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField()),
                ('address', models.CharField(default='ul.DÅ‚uga 44/4', max_length=128)),
                ('phone_number', phone_field.models.PhoneField(blank=True, help_text='Contact Phone Number', max_length=31)),
                ('city', models.CharField(max_length=32)),
                ('zip_code', models.CharField(max_length=6)),
                ('pick_up_date', models.DateField(help_text='2022-12-12')),
                ('pick_up_time', models.TimeField(help_text='12:00')),
                ('pick_up_comment', models.TextField(max_length=1024)),
                ('categories', models.ManyToManyField(to='user.category')),
                ('institution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.institution')),
                ('user', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
